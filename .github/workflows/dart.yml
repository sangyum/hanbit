# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    name: "Run unit tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable' # or: 'beta', 'dev' or 'master'
      - run: flutter --version
      - run: flutter pub get
      - run: flutter test

  build:
    name: "Build Android client"
    runs-on: ubuntu-latest
    needs: test
    steps:
      - shell: bash
        run: |
          echo PLANNING_CENTER_APPLICATION_ID=${{ secrets.PLANNING_CENTER_APPLICATION_ID }} > .env
          echo PLANNING_CENTER_SECRET=${{ secrets.PLANNING_CENTER_SECRET }} >> .env
          echo FIREBASE_WEB_API_KEY=${{ secrets.FIREBASE_WEB_API_KEY }} >> .env
          echo FIREBASE_ANDROID_API_KEY=${{ secrets.FIREBASE_ANDROID_API_KEY }} >> .env
          echo FIREBASE_IO_API_KEY=${{ secrets.FIREBASE_IO_API_KEY }} >> .env
          echo FIREBASE_MACOS_API_KEY=${{ secrets.FIREBASE_MACOS_API_KEY }} >> .env
          echo FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }} >> .env
          echo FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }} >> .env
          echo FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }} >> .env
          echo FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }} >> .env
          echo FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }} >> .env
          echo FIREBASE_MEASUREMENT_ID=${{ secrets.FIREBASE_MEASUREMENT_ID }} >> .env
          echo FIREBASE_IOS_BUNDLE_ID=${{ secrets.FIREBASE_IOS_BUNDLE_ID }} >> .env
          echo FIREBASE_MACOS_BUNDLE_ID=${{ secrets.FIREBASE_MACOS_BUNDLE_ID }} >> .env
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable' # or: 'beta', 'dev' or 'master'
      - run: flutter --version
      - run: flutter pub get
      - run: flutter build apk --dart-define-from-file=.env
      - run: flutter build appbundle

  ios-build:
    name: "Build iOS client"
    needs: test
    runs-on: macos-latest
    steps:
      - shell: bash
        run: |
          echo PLANNING_CENTER_APPLICATION_ID=${{ secrets.PLANNING_CENTER_APPLICATION_ID }} > .env
          echo PLANNING_CENTER_SECRET=${{ secrets.PLANNING_CENTER_SECRET }} >> .env
          echo FIREBASE_WEB_API_KEY=${{ secrets.FIREBASE_WEB_API_KEY }} >> .env
          echo FIREBASE_ANDROID_API_KEY=${{ secrets.FIREBASE_ANDROID_API_KEY }} >> .env
          echo FIREBASE_IO_API_KEY=${{ secrets.FIREBASE_IO_API_KEY }} >> .env
          echo FIREBASE_MACOS_API_KEY=${{ secrets.FIREBASE_MACOS_API_KEY }} >> .env
          echo FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }} >> .env
          echo FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }} >> .env
          echo FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }} >> .env
          echo FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }} >> .env
          echo FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }} >> .env
          echo FIREBASE_MEASUREMENT_ID=${{ secrets.FIREBASE_MEASUREMENT_ID }} >> .env
          echo FIREBASE_IOS_BUNDLE_ID=${{ secrets.FIREBASE_IOS_BUNDLE_ID }} >> .env
          echo FIREBASE_MACOS_BUNDLE_ID=${{ secrets.FIREBASE_MACOS_BUNDLE_ID }} >> .env
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64
      - run: flutter --version
      - run: flutter pub get
      - run: flutter build ios --release --no-codesign --dart-define-from-file=.env

  macos-build:
    name: "Build macOS client"
    needs: test
    runs-on: macos-latest
    steps:
      - shell: bash
        run: |
          echo PLANNING_CENTER_APPLICATION_ID=${{ secrets.PLANNING_CENTER_APPLICATION_ID }} > .env
          echo PLANNING_CENTER_SECRET=${{ secrets.PLANNING_CENTER_SECRET }} >> .env
          echo FIREBASE_WEB_API_KEY=${{ secrets.FIREBASE_WEB_API_KEY }} >> .env
          echo FIREBASE_ANDROID_API_KEY=${{ secrets.FIREBASE_ANDROID_API_KEY }} >> .env
          echo FIREBASE_IO_API_KEY=${{ secrets.FIREBASE_IO_API_KEY }} >> .env
          echo FIREBASE_MACOS_API_KEY=${{ secrets.FIREBASE_MACOS_API_KEY }} >> .env
          echo FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }} >> .env
          echo FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }} >> .env
          echo FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }} >> .env
          echo FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }} >> .env
          echo FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }} >> .env
          echo FIREBASE_MEASUREMENT_ID=${{ secrets.FIREBASE_MEASUREMENT_ID }} >> .env
          echo FIREBASE_IOS_BUNDLE_ID=${{ secrets.FIREBASE_IOS_BUNDLE_ID }} >> .env
          echo FIREBASE_MACOS_BUNDLE_ID=${{ secrets.FIREBASE_MACOS_BUNDLE_ID }} >> .env
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64
      - run: flutter --version
      - run: flutter pub get
      - run: flutter config --enable-macos-desktop
      - run: flutter build macos --dart-define-from-file=.env